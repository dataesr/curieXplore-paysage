name: Publish docker image, release on github and deploy

on:
  push:
    tags:
      - "*"

env:
  # Must match k8s deployment name
  DEPLOYMENT: curiexplore-paysage
  DEPLOYMENT_URL: https://curie.dataesr.ovh/api

jobs:
  publish-ghcr:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Get version
        id: version
        run: echo ::set-output name=version::${GITHUB_REF#refs/tags/}

      - name: Log into registry
        run: docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}

      - name: Build image
        run: docker build -f Dockerfile -t ${{ github.repository }} .

      - name: Push image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository }}
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          docker tag ${{ github.repository }} $IMAGE_ID:latest
          docker tag ${{ github.repository }} $IMAGE_ID:${{ steps.version.outputs.version }}
          docker push $IMAGE_ID:latest
          docker push $IMAGE_ID:${{ steps.version.outputs.version }}

  release:
    runs-on: ubuntu-latest
    needs: publish-ghcr
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Get version
        id: version
        run: echo ::set-output name=version::${GITHUB_REF#refs/tags/}
      - name: Create changelog text
        id: changelog
        uses: loopwerk/tag-changelog@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          config_file: .github/config/changelog.js
      - name: print changelog
        run: echo "${{ steps.changelog.outputs.changes }}"
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.version }}
          release_name: ${{ steps.version.outputs.version }}
          body: "${{ steps.changelog.outputs.changes }}"

  deploy:
    runs-on: ubuntu-latest
    needs: release
    steps:

      - name: Check Out Repo
        uses: actions/checkout@v2

      - name: Deploy to Cluster
        id: kubectl-deploy
        uses: dataesr/kubectl-deploy@v1.1
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG_DOAD }}
        with:
          restart: ${{ env.DEPLOYMENT }}

      - name: Notify in slack
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"blocks": [{"type": "section", "text": {"type": "mrkdwn", "text": "Une nouvelle version de $DEPLOYMENT a été déployée !"}, "accessory": {"type": "button", "style": "primary", "text": {"type": "plain_text", "text": "Voir le site", "emoji": true }, "value": "go-to-page", "url": $DEPLOYMENT_URL, "action_id": "button-action" }}]}' ${{ secrets.SLACK_WEBHOOK }}
